knit("RResearch2A.Rmd
")
load("knitr"
)
load("knitr")
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
knit("RResearch.rmd")
knit("RResearch2.rmd")
getwd()
ls
library(knitr)
library(markdown)
knit("RResearch2.rmd")
getwd()
knit("RResearch2A.rmd")
q()
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
data()
data(package = .packages(all.available = TRUE))
utils:::menuInstallPkgs()
data()
data(golton)
data(goulton)
data(G,oulton)
data(Goulton)
?data(Goulton)
utils:::menuInstallPkgs()
library(kernlab)
data(spam)
heasd(spam)
head(spam)
utils:::menuInstallPkgs()
library(devtools)
utils:::menuInstallPkgs()
library(devtools)
library(devtools)
install_github("ramnathv/rCharts@dev")
chooseCRANmirror()
library(devtools)
install_github("ramnathv/rCharts@dev")
utils:::menuInstallPkgs()
chooseCRANmirror()
utils:::menuInstallPkgs()
library(devtools)
install_github("ramnathv/rCharts@dev")
utils:::menuInstallPkgs()
utils:::menuInstallPkgs()
q()
devtools::install_github('rstudio/shinyapps')
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
shinyapps::setAccountInfo(name='pramesh', token='DED2FA75BE49C3BE2B114DEC8A89B3D9', secret='G6ZCVXqTa03wrIWCQ0j5Yu2+QkjcZMbjM6dvFfDC')
utils:::menuInstallPkgs()
chooseCRANmirror()
library(devtools)
install.github("ropensci/plotly")
install_github("ropensci/plotly")
library(plotly)
q()
x <- c(0.18, -1.54, 0.42, 0.95)
w <- c(2, 1, 3, 1)
library(manipulate)
myHist<-function(mu){}
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
library(slidify)
q()
more
slidify("index.Rmd")
library(slidify)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y~x)
summary(fit)
q()
data(mtcars)
attach(mtcars)
fit <- lm(mpg ~ wt, mtcars)
summary(fit)
exp <- fit$coefficients[1] + mean(wt) * fit$coefficients[2]
exp - 2 * 0.5591
?mtcars
summary(fit)
fit[[1]][1] + 3 * fit[[1]][2]
summary(fit)
fit[[1]][1] + 3 * fit[[1]][2]
attach(mtcars)
> data(mtcars)
> attach(mtcars)
> fit <- lm(mpg ~ wt, mtcars)
data(mtcars)
attach(mtcars)
yoyo<- <- lm(mpg ~ wt, mtcars)
yoyo<- lm(mpg ~ wt, mtcars)
newdata<-data.frame(wt=3000)
predict(yoyo, newdata, interval="predict")
fit <- lm(mpg ~ wt, mtcars)
newdata<-data.frame(wt=3)
predict(yoyo, newdata, interval="predict")
ßabline
?abline
library(UsingR)
data(diamond)
plot(diamond$carat, diamond$price,
xlab = "Mass (carats)",
ylab = "Price (SIN $)",
bg = "lightblue",
col = "black", cex = 1.1, pch = 21,frame = FALSE)
abline(lm(price ~ carat, data = diamond), lwd = 2)
fit <- lm(price ~ carat, data = diamond)
coef(fit)
data(diamond)
y <- diamond$price; x <- diamond$carat; n <- length(y)
fit <- lm(y ~ x)
e <- resid(fit)
yhat <- predict(fit)
max(abs(e -(y - yhat)))
x <- runif(100, -3, 3); y <- x + sin(x) + rnorm(100, sd = .2);
plot(x, y); abline(lm(y ~ x))
y <- diamond$price; x <- diamond$carat; n <- length(y)
fit <- lm(y ~ x)
summary(fit)$sigma
summary(fit)
example(anscombe)
example(anscombe)
x <- c(0.61, 0.93, 0.83, 0.35, 0.54, 0.16, 0.91, 0.62, 0.62)
y <- c(0.67, 0.84, 0.6, 0.18, 0.85, 0.47, 1.1, 0.65, 0.36)
fit <- lm(y~x)
summary(fit)
data(mtcars)
attach(mtcars)
fit <- lm(mpg ~ wt, mtcars)
summary(fit)
exp <- fit$coefficients[1] + mean(wt) * fit$coefficients[2]
exp - 2 * 0.5591
data(mtcars)
fit <- lm(mpg ~ factor(cyl) + wt, mtcars)
summary(fit)
data(mtcars)
2 # q1
3 # Consider the mtcars data set. Fit a model with mpg as the outcome that includes number of cylinders as a factor variable and weight as confounder. Give the adjusted estimate for the expected change in mpg comparing 8 cylinders to 4.
4
5 fit <- lm(mpg ~ as.factor(cyl) + wt, data = mtcars)
6 summary(fit)$coef[3,1] #the answer
7
data(mtcars)
fit <- lm(mpg ~ as.factor(cyl) + wt, data = mtcars)
summary(fit)$coef[3,1]
fit2 <- lm(mpg ~ as.factor(cyl), data = mtcars)
summary(fit)$coef
summary(fit2)$coef
cyl
fitInter <- lm(mpg ~ as.factor(cyl) * wt, data = mtcars)
anova(fit, fitInter)
fit3 <- lm(mpg ~ factor(cyl)*wt, mtcars)
summary(fit3)
lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
ss<-lm(mpg ~ I(wt * 0.5) + factor(cyl), data = mtcars)
summary8ss)
summary(ss)
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y ~ x)
plot(x, y)
plot(x, y)
max(hatvalues(fit))
x <- c(0.586, 0.166, -0.042, -0.614, 11.72)
y <- c(0.549, -0.026, -0.127, -0.751, 1.344)
fit <- lm(y ~ x)
dfbetas(fit)
?dfbetas
order(hatvalues(fit),decreasing=TRUE)
hatvalues(fit)[5]
xxx<-hatvalues(fit)[5]
xxx
dfbetas(xxx)
xxx<-hatvalues(fit)[1:4]
xxx
dfbetas(xxx)
dim(hatvalues(fit))
hatvalues(fit)
str(hatvalues(fit))
xxx
str(xxx)
class(hatvalues(fit))
class(xxx)
dfbetas(order(hatvalues(fit),decreasing=TRUE))
dfbetas(hatvalues(fit))
fit
dfbetas(fit)
q()
?suppressMessage()
?data.frame
?subset
?pairs
?mtcars
render("pdftest.Rmd", "pdf_document")
render("pdftest.Rmd", "pdf_document")
library(rmarkdown)
render("pdftest.Rmd", "pdf_document")
?train
? numericInput
?numericInput
load(shiny)
library(shiny)
?numericInput
mdata[,3]<-as.numeric(levels(mdata[,3]))[mdata[,3]]
data.result
a2<-youresult[1,2]
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp('DDPloy')
shiny::runApp('test')
shiny::runApp('test')
shiny::runApp('test')
))
shiny::runApp('test1')
shiny::runApp('test1')
shiny::runApp('test1')
shiny::runApp('test1')
shiny::runApp('test1')
shiny::runApp('test1')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('DDPloy')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test2')
shiny::runApp('test3')
shiny::runApp('test3')
shiny::runApp('test3')
shiny::runApp('test3')
shiny::runApp('test3')
shiny::runApp('test3')
shiny::runApp('test3')
shiny::runApp('test3')
shiny::runApp('test3')
shiny::runApp('test3')
shiny::runApp('test3')
shiny::runApp('test5')
shiny::runApp('test5')
shiny::runApp('DDPloy - 2')
shiny::runApp('DDPloy - 2')
shiny::runApp('DDPloy - 2')
shiny::runApp('DDPloy - 2')
shiny::runApp('DDPloy - 2')
shiny::runApp('DDPloy - 9')
?read.xls
shiny::runApp('DDPloy - 9')
shiny::runApp('DDPloy - 9')
shiny::runApp('DDPloy - 9')
shiny::runApp('test5')
library(knitr)
library(markdown)
knit("PML-Final.md")
knit("PML-Final.rmd")
knit("PML-Final.rmd")
wd
?setwd
getwd()
library(knitr)
library(markdown)
knit("Regmod-PRFinal.Rmd")
library(MASS)
data(shuttle)
shuttle$use <- factor(shuttle$use, levels = c("auto", "noauto"), labels = c(1, 0))
fit1 <- glm(use ~ wind - 1, data = shuttle, family = "binomial")
summary(fit)
windhead <- fit1$coef[1]
windtail <- fit1$coef[2]
exp(windtail)/exp(windhead)
huttle$use <- factor(shuttle$use, levels = c("auto", "noauto"), labels = c(1, 0))
shuttle$use <- factor(shuttle$use, levels = c("auto", "noauto"), labels = c(1, 0))
fit2 <- glm(use ~ wind + magn - 1, data = shuttle, family = "binomial")
summary(fit)
windhead2 <- fit2$coef[1]
windtail2 <- fit2$coef[2]
exp(windtail2)/exp(windhead2)
fit2 <- glm(use ~ wind + magn - 1, data = shuttle, family = "binomial")
summary(fit)
windhead2 <- fit2$coef[1]
windtail2 <- fit2$coef[2]
exp(windtail2)/exp(windhead2)
shiny::runApp('Ddploy2')
shiny::runApp('Ddploy2')
shiny::runApp('Ddploy2')
shiny::runApp('Ddploy2')
shiny::runApp('Ddploy2')
shiny::runApp('Ddploy2')
shiny::runApp('Ddploy2')
shiny::runApp('Ddploy2')
shiny::runApp('Ddploy2')
shiny::runApp('Ddploy2')
shiny::runApp('Ddploy2')
shiny::runApp('Ddploy2')
library(knitr)
knit("legend.rmd")
knit("legend.Rmd")
getwd()
knit("legend.Rmd")
shiny::runApp('Ddploy2')
shiny::runApp('Ddploy2')
knit("legend.Rmd")
shiny::runApp('Ddploy2')
knit("legend.Rmd")
shiny::runApp('Ddploy2')
shiny::runApp('Ddploy2')
shiny::runApp('Ddploy2')
shiny::runApp('Ddploy2')
shiny::runApp('Ddploy2')
shiny::runApp('Ddploy2')
shiny::runApp('Ddploy2')
terminateApp("DDPloy")
library(shiny)
terminateApp("DDPloy")
hinyapps::terminateApp("DDPloy")
knit("ShinyPR.Rmd")
library(knitr)
knit("ShinyPR.Rmd")
my.now<-c(63,0.375,0.75,0.784,0.957,77.1,70.3,10980,22726,18.2,152,3.4,5.5,83,67)
my.fut<-c(6,0.046,0.892,0.928,0.962,83.1,78.3,33028,53445,15.4,113,0.8,6.7,90,52)
dim(my,now)
dim(my.now)
mdata<-read.csv("ddprod-pr.csv", header=TRUE)
mdata[,1]<-as.character(mdata[,1])  # preprocess data
my.now<-c(63,0.375,0.75,0.784,0.957,77.1,70.3,10980,22726,18.2,152,3.4,5.5,83,67)
my.fut<-c(6,0.046,0.892,0.928,0.962,83.1,78.3,33028,53445,15.4,113,0.8,6.7,90,52)
m<-c(2,3,5,6,8,10,11,12,13,14,15,16)   # remove country name
f<-c(2,3,4,6,7,9,11,12,13,14,15,16)
if(gender=="Male"){
data.now<-my.now[,m]
data.fut<-my.fut[,m]
} else {
data.now<-my.now[,f]
data.fut<-my.fut[,f]
}
gender="Male"
my.now<-c(63,0.375,0.75,0.784,0.957,77.1,70.3,10980,22726,18.2,152,3.4,5.5,83,67)
my.fut<-c(6,0.046,0.892,0.928,0.962,83.1,78.3,33028,53445,15.4,113,0.8,6.7,90,52)
m<-c(2,3,5,6,8,10,11,12,13,14,15,16)   # remove country name
f<-c(2,3,4,6,7,9,11,12,13,14,15,16)
if(gender=="Male"){
data.now<-my.now[,m]
data.fut<-my.fut[,m]
} else {
data.now<-my.now[,f]
data.fut<-my.fut[,f]
}
my.now
my.now<-as.data(my.now)
?as.dataframe
my.now<-as.data.frame(my.now)
my.now
my.now[,2]
my.now<-c(63,0.375,0.75,0.957,77.1,10980,18.2,152,3.4,5.5,83,67)
my.fut<-c(6,0.046,0.892,0.962,83.1,33028,15.4,113,0.8,6.7,90,52)
yy<-my.now-my.fut
yy
data.now <- my.now-my.fut
data.result <- my.now-my.fut
slidify("index.Rmd")
shiny::runApp('DDPFinal2')
getwd()
shiny::runApp('DDPFinal3')
